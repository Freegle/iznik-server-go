version: 2
jobs:
  build:
    environment:
      - MYSQL_USER=root
      - MYSQL_PASSWORD=
      - MYSQL_PROTOCOL=tcp
      - MYSQL_HOST=127.0.0.1
      - MYSQL_PORT=3306
      - MYSQL_DBNAME=iznik
      - IMAGE_ARCHIVED_DOMAIN=cdn.ilovefreegle.org
      - USER_SITE=www.ilovefreegle.org
      - JWT_SECRET=secret
      - GROUP_DOMAIN=groups.ilovefreegle.org
      - STANDALONE=TRUE
      - XDEBUG_MODE=coverage
    docker:
      - image: cimg/go:1.18
      - image: schickling/beanstalkd
      - image: circleci/mysql:8.0.25
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: iznik
          MYSQL_ROOT_HOST: 127.0.0.1
      - image: circleci/postgres:12-postgis
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_USER: iznik
          POSTGRES_PASSWORD: iznik
    steps:
      - checkout

      # We're testing the Go server here, but that's only a read-only API so we need some data in
      # the DB for it.  We install the test environment from the PHP server, though we don't
      # need to set it up as fully.
      - run: sudo apt-get update
      - run: sudo apt-get install -y php
      - run: sudo apt-get install -y default-mysql-client
      - run: sudo docker-php-ext-install pdo_mysql
      - run: sudo -E docker-php-ext-enable pdo_mysql
      - run: sudo apt install -y libgmp-dev libxml2-dev libgd-dev libpng-dev libjpeg62-turbo-dev imagemagick-common vim
      - run: sudo -E docker-php-ext-install exif
      - run: sudo -E docker-php-ext-install gmp
      - run: sudo -E docker-php-ext-install soap
      - run: sudo -E docker-php-ext-configure gd  --with-jpeg
      - run: sudo -E docker-php-ext-install gd
      - run: sudo pecl install mailparse
      - run: sudo -E docker-php-ext-enable mailparse
      - run: sudo docker-php-ext-install pdo_mysql
      - run: sudo -E docker-php-ext-enable pdo_mysql
      - run: sudo -E apt-get install -y libpq-dev
      - run: sudo -E docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql
      - run: sudo -E docker-php-ext-install pdo pdo_pgsql pgsql
      - run: sudo -E docker-php-ext-enable pdo_pgsql
      - run: sudo -E pecl install redis
      - run: sudo -E docker-php-ext-enable redis

      # Postgresql
      - run: sudo apt-get install -y postgresql-client-common postgresql-client
      - run: |
          psql \
          -h 127.0.0.1 -U iznik -d circle_test \
          -c "CREATE DATABASE iznik;"
      - run: |
          psql \
          -h 127.0.0.1 -U iznik -d circle_test \
          -c "CREATE TYPE location_type AS ENUM('Road','Polygon','Line','Point','Postcode');"
      - run: |
          psql \
          -h 127.0.0.1 -U iznik -d circle_test \
          -c "CREATE TABLE IF NOT EXISTS locations(id serial, locationid bigint, name text, type location_type, area numeric, location geometry);"

      - run: sudo git clone https://github.com/Freegle/iznik-server.git
      - run: sudo chown -R circleci:circleci iznik-server/
      - run: sudo cp iznik-server/install/iznik.conf.php /etc/iznik.conf
      - run: sudo chmod 777 /etc/iznik.conf

      - run: sudo sed -ie "s/'PGSQLDB', 'iznik'/'PGSQLDB', 'circle_test'/g" /etc/iznik.conf
      - run: sudo sed -ie "s/'MAPBOX_TOKEN', 'zzzz'/'MAPBOX_TOKEN', '$MAPBOX_TOKEN'/g" /etc/iznik.conf

      - run: sudo sed -ie 's/ROW_FORMAT=DYNAMIC//g' iznik-server/install/schema.sql
      - run: sudo sed -ie 's/timestamp(3)/timestamp/g' iznik-server/install/schema.sql
      - run: sudo sed -ie 's/timestamp(6)/timestamp/g' iznik-server/install/schema.sql
      - run: sudo sed -ie 's/CURRENT_TIMESTAMP(3)/CURRENT_TIMESTAMP/g' iznik-server/install/schema.sql
      - run: sudo sed -ie 's/CURRENT_TIMESTAMP(6)/CURRENT_TIMESTAMP/g' iznik-server/install/schema.sql

      - run: while ! nc -z localhost 3306; do sleep 1; done
      - run: mysql --host="127.0.0.1" -u root iznik < iznik-server/install/schema.sql
      - run: mysql --host="127.0.0.1" -u root iznik < iznik-server/install/functions.sql
      - run: mysql --host="127.0.0.1" -u root iznik < iznik-server/install/damlevlim.sql
      - run: mysql --host="127.0.0.1" -u root -e "SET GLOBAL sql_mode = 'NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'"

      # ...and change some config, otherwise some of the larger attachment inserts fail.
      - run: mysql --host="127.0.0.1" -u root -e "set global max_allowed_packet=33554432"

      # Install composer dependencies.  Use v1 as we're not compatible with v2.
      - run: cd iznik-server/composer; wget https://getcomposer.org/composer-1.phar; php composer-1.phar install; cd ..

      # Set up the environment we need for running our UT.
      - run: cp .circleci/testenv.php iznik-server/install/
      - run: cd iznik-server; php install/testenv.php
      - run: sudo chown -R circleci:circleci iznik-server/

      # Run the UT.
      - run: go get golang.org/x/tools/cmd/cover
      - run: go get github.com/mattn/goveralls
      - run:
          name: Go Tests
          no_output_timeout: 30m
          command: go test -v -cover -race -coverprofile=coverage.out ./test -coverpkg ./...
      - run: /home/circleci/go/bin/goveralls -coverprofile=./coverage.out -service=circle-ci -repotoken=$COVERALLS_TOKEN